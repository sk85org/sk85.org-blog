<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>0212 on d.sk85.org</title><link>/n%E5%B9%B4%E6%97%A5%E8%A8%98/0212/</link><description>Recent content in 0212 on d.sk85.org</description><generator>Hugo</generator><language>ja</language><lastBuildDate>Tue, 13 Feb 2024 23:41:50 +0900</lastBuildDate><atom:link href="/n%E5%B9%B4%E6%97%A5%E8%A8%98/0212/index.xml" rel="self" type="application/rss+xml"/><item><title>2024-02-12</title><link>/posts/2024/02/12/753695/</link><pubDate>Mon, 12 Feb 2024 00:00:00 +0900</pubDate><guid>/posts/2024/02/12/753695/</guid><description>&lt;h2 id="午前">午前&lt;/h2>
&lt;ul>
&lt;li>午前中は息子と近くの公園に&lt;/li>
&lt;li>昼食は自宅で&lt;/li>
&lt;/ul>
&lt;h2 id="午後">午後&lt;/h2>
&lt;ul>
&lt;li>夕方まで自宅で過ごし息子とモールに行きポケモン図鑑を買う&lt;/li>
&lt;li>図書館で本を買える&lt;/li>
&lt;li>スーパーで買い物&lt;/li>
&lt;li>22:30 ごろ就寝&lt;/li>
&lt;/ul>
&lt;h2 id="体調">体調&lt;/h2>
&lt;ul>
&lt;li>70&lt;/li>
&lt;/ul>
&lt;h2 id="その他">その他&lt;/h2>
&lt;h2 id="今日の-tabs">今日の Tabs&lt;/h2></description></item><item><title>2023-02-12</title><link>/posts/2023/02/12/362623/</link><pubDate>Sun, 12 Feb 2023 00:00:00 +0900</pubDate><guid>/posts/2023/02/12/362623/</guid><description>&lt;h2 id="午前">午前&lt;/h2>
&lt;ul>
&lt;li>息子の朝食作り&lt;/li>
&lt;li>家の掃除&lt;/li>
&lt;li>息子スイミング&lt;/li>
&lt;li>10:00 ごろマクドナルドで坦々バーガーを食べる&lt;/li>
&lt;li>昼食は自宅で&lt;/li>
&lt;/ul>
&lt;h2 id="午後">午後&lt;/h2>
&lt;ul>
&lt;li>何をしたか記憶にない&lt;/li>
&lt;li>多分午後は自宅で過ごす&lt;/li>
&lt;/ul>
&lt;h2 id="体調">体調&lt;/h2>
&lt;ul>
&lt;li>明日からの仕事を考え一日中憂鬱&lt;/li>
&lt;li>特に問題があるわけではないが不安&lt;/li>
&lt;/ul>
&lt;h2 id="その他">その他&lt;/h2>
&lt;ul>
&lt;li>どんなものかと mastodon のインスタンスを立ててみる&lt;/li>
&lt;li>docker でたててみたが、あまりドキュメントがなく四苦八苦&lt;/li>
&lt;li>とりあえず試験運用&lt;/li>
&lt;/ul>
&lt;h2 id="今日の-tabs">今日の Tabs&lt;/h2>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul></description></item><item><title>2022-02-12</title><link>/posts/2022/02/12/40519/</link><pubDate>Sat, 12 Feb 2022 00:00:00 +0900</pubDate><guid>/posts/2022/02/12/40519/</guid><description>&lt;h2 id="午前">午前&lt;/h2>
&lt;ul>
&lt;li>トイレとお風呂掃除&lt;/li>
&lt;li>近くで大盛り弁当を買って、3人で公園に&lt;/li>
&lt;/ul>
&lt;h2 id="午後">午後&lt;/h2>
&lt;ul>
&lt;li>3時前に帰宅&lt;/li>
&lt;li>お昼寝&lt;/li>
&lt;li>夕食は軽めに&lt;/li>
&lt;/ul>
&lt;h2 id="体調">体調&lt;/h2>
&lt;ul>
&lt;li>普通&lt;/li>
&lt;li>息子も問題なし&lt;/li>
&lt;/ul>
&lt;h2 id="その他">その他&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://topics.nintendo.co.jp/article/7a5ddbdb-dac7-468b-9c6c-3014dc7cb0b6">『MOTHER』『MOTHER2 ギーグの逆襲』が「ファミリーコンピュータ＆スーパーファミコン Nintendo Switch Online」で本日追加。プラチナポイント交換グッズも登場。 | トピックス | Nintendo&lt;/a>
&lt;ul>
&lt;li>マザー2が追加されたので久々に登録&lt;/li>
&lt;li>今年はsplatoon2とゼルダBoWの後編も出るようなので楽しみだ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="今日のtabs">今日のTabs&lt;/h2></description></item><item><title>goのエラー処理</title><link>/posts/2020/02/12/880385/</link><pubDate>Wed, 12 Feb 2020 13:23:38 +0900</pubDate><guid>/posts/2020/02/12/880385/</guid><description>&lt;p>goはerrorインターフェイスを持っている、&lt;/p>
&lt;pre tabindex="0">&lt;code>type error interface {
 Error() string
}
&lt;/code>&lt;/pre>&lt;p>よく見る例としてError()関数を実装すれば、独自のerrorを作ることができる。&lt;br>
&lt;a href="https://play.golang.org/p/cO0-r95Hd_r">https://play.golang.org/p/cO0-r95Hd_r&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>package main

import (
	&amp;#34;fmt&amp;#34;
)

type Error struct {
	Msg string
	Code int
}

func (err *Error) Error() string {
	return fmt.Sprintf(&amp;#34;ErrorMessage [%s], ErrorCode [%d]&amp;#34;, err.Msg, err.Code)
}

func test() error {
	return &amp;amp;Error{Msg: &amp;#34;file not found&amp;#34;, Code: 2}
}

func main() {
	if err := test(); err != nil {
		fmt.Println(err)
	}
}
&lt;/code>&lt;/pr</description></item></channel></rss>