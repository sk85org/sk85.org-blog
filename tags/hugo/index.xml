<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hugo on d.sk85.org</title><link>/tags/hugo/</link><description>Recent content in hugo on d.sk85.org</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 21 Aug 2021 17:14:16 +0900</lastBuildDate><atom:link href="/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>2021-08-21</title><link>/posts/2021/08/21/126670/</link><pubDate>Sat, 21 Aug 2021 17:14:16 +0900</pubDate><guid>/posts/2021/08/21/126670/</guid><description>午前 息子朝から熱が高め 小児科に連れて行く、混んでいた RSVとhMPVはマイナス ネブライザーで気管支拡張薬吸引 ツロブテロール貼付剤と風邪薬と座薬を処方された しんどいのか食欲なし 午後 長時間お昼寝 図書館で本を借りてくる 正義を振りかざす「極端な人」の正体 (光文社新書) | カーリル 夕食も食欲なし 座薬を入れて就寝 体調 普通 その他 GitHub Actions sk85.org-blog/.github/workflows/
GithubActionsを利用して日記ファイル(md形式)をテンプレートエンジンで定期作成して、サーバーにデプロイするようにした。Keyboard Maestroのスクリプトでも簡単に作れるけど、GitHubのコードエディタでも作れるとipadでの編集が楽かなと思って。GitHub ActionsはUTCで動いているので、起動する時間に注意が必要。ジョブを実行するマシンではタイムゾーンを設定するとJSTで書ける。
ワークフローをトリガーするイベント Crontab.guru - The cron schedule expression editor 『GitHub Actions 実践入門』の商業版が販売開始しました - 生産性向上ブログを購入</description></item><item><title>hugoのURL構成を変更した</title><link>/posts/2020/12/13/388521/</link><pubDate>Sun, 13 Dec 2020 23:05:43 +0900</pubDate><guid>/posts/2020/12/13/388521/</guid><description>フォルダでの管理をやめ、contents/post以下に YYYYMMDD_XXXXXX.md 命名ルール (X:数字)のファイルを置くようにした。
ファイルのフロントマターにslug: XXXXXXを指定するようにした。
URLの構成を変えて、/posts/YYYY/MM/DD/XXXXXX/でアクセスできるようにしたので、
一日に複数の記事をかけるようになった。分類はtagのみ。</description></item><item><title>hugoのデプロイ方法を変更した</title><link>/posts/2020/12/13/758287/</link><pubDate>Sun, 13 Dec 2020 14:38:13 +0900</pubDate><guid>/posts/2020/12/13/758287/</guid><description>conoha VPSへの移行に伴って、hugoのデプロイ方法を変更した。
今までは、GitHubにpushするとGitHubからVPSにWebhookが飛び、
それを起点にVPSからリポジトリをpullして、VPS上でデプロイしていた。
それを変更し、Gtihub actionを利用してpushを起点にしてVPSに
変更ファイルをrsyncして、VPS側で静的ファイルを出力するように変更した。
VPSへの同期の方法しか変わっていないが、VPS側でwebhookサーバーを立てる必要がなくなった。</description></item><item><title>Hugoで作った静的サイトのデータをgithubで管理する</title><link>/posts/2019/06/29/395779/</link><pubDate>Sat, 29 Jun 2019 13:23:38 +0900</pubDate><guid>/posts/2019/06/29/395779/</guid><description>hugoでサイトを作るにあたって、Markdownファイルやテンプレートはgithub上で管理している。
github上のリポジトリにcommitがあるとgithubからwebhookが飛ぶ。
それを受け取ったサーバー上でgit pullして同期、その後hugoでデプロイ
Webhookサーバーを書いた skt1984/webhook
hook.jsonにアドレス, シークレットキー, X-GitHub-Event及び実行したいシェルスクリプトを指定する。
[ { &amp;#34;path&amp;#34;: &amp;#34;/hugo&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;put&amp;#34;, &amp;#34;shell&amp;#34;: &amp;#34;sh&amp;#34;, &amp;#34;execute-command&amp;#34;: &amp;#34;hugo.sh&amp;#34;, &amp;#34;execute-command-directry&amp;#34;: &amp;#34;/home/username/webhook&amp;#34;, &amp;#34;X-GitHub-Event&amp;#34;: &amp;#34;push&amp;#34;, &amp;#34;method&amp;#34;: &amp;#34;POST&amp;#34;, &amp;#34;secret&amp;#34;: &amp;#34;secret_key&amp;#34; } ] 起動時にjsonファイルとポートの指定が可能
./webhook -f hook.json -p :8080 github上のリポジトリでhostname:8080/hugoを対象にwebhookの設定を行い、commitが行われるとhugo.shが実行される。/home/username/repositoryではリモートリポジトリをgithubに指定
まずローカルにGitHubのリポジトリをcloneする
cd /home/username git clone git@github.com:username/repository.git hugoのbinaryを入手
cd /home/username/repository git pull cd /home/username/repository /path/to/hugobinary/hugo -d /phome/username/public``` systemdの登録について (userを指定しないとgitpull　できない・) [Unit] Description = webhook [Service] ExecStart = /path/to/webhook/webhook -f /path/to/webhook/hook.json -p :8080 Restart = always Type = simple User=user [Install] WantedBy = multi-user.</description></item></channel></rss>